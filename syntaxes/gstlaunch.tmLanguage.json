{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "gstlaunch",
  "patterns": [
    {
      "include": "#connector"
    },
    {
      "include": "#line_continuation"
    },
    {
      "include": "#kwarg"
    },
    {
      "include": "#property_key"
    },
    {
      "include": "#property_value_unquoted"
    },
    {
      "include": "#property_value_quoted"
    },
    {
      "include": "#asignment"
    },
    {
      "include": "#pad"
    },
    {
      "include": "#number"
    },
    {
      "include": "#element"
    },
    {
      "include": "#string"
    },
    {
      "include": "#capskey"
    },
    {
      "include": "#connector"
    }
  ],
  "repository": {
    "line_continuation": {
      "patterns": [
        {
          "name": "constant.language.gstlaunch",
          "match": "\\\\$"
        }
      ]
    },
    "kwarg": {
      "name": "constant.numeric.gstlaunch",
      "begin": "{",
      "end": "}",
      "patterns": [
        {
          "name": "variable.parameter.gstlaunch",
          "match": "(?<={)[\\w_]+?(?=})"
        }
      ]
    },
    "property_key": {
      "patterns": [
        {
          "name": "variable.parameter.gstlaunch",
          "match": "(^|[\\b\\s])\\w+([\\w_-])*(?==[{\"'/\\w\\.-])"
        }
      ]
    },
    "property_value_unquoted": {
      "patterns": [
        {
          "name": "string.quoted.gstlaunch",
          "match": "(?<=\\w=)[a-zA-Z/][\\w/,.-]*\\s"
        }
      ]
    },
    "property_value_quoted": {
      "begin": "=\\s*(['\"])",
        "end": "(\\1)|((?<!\\\\)\\n)",
      "patterns": [
        {
          "name": "string.quoted.gstlaunch",
          "match": ".+?"
        }
      ]
    },
    "asignment": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.gstlaunch",
          "match": "(?<=\\w)=(?=['\\({/\\w_-])"
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "constant.numeric.gstlaunch",
          "match": "(?<=[\\s=])\\d+(?:\\.\\d+)?(?=\\W)"
        }
      ]
    },
    "element": {
      "patterns": [
        {
          "name": "entity.name.class.gstlaunch",
          "match": "(?x)\n  (?<!\\.) \\b(\n  3gppmux | a2dpsink | a52dec | aacparse | aasink | ac3parse | accurip | adder | adpcmdec | adpcmenc | agingtv | aiffmux | aiffparse | alawdec | alawenc | alpha | alphacolor | alsamidisrc | alsasink | alsasrc | amrnbdec | amrnbenc | amrparse | amrwbdec | apedemux | apev2mux | appsink | appsrc | asfdemux | asfmux | asfparse | aspectratiocrop | assrender | asteriskh263 | audioamplify | audiobuffersplit | audiochannelmix | audiochebband | audiocheblimit | audioconvert | audiodynamic | audioecho | audiofirfilter | audioiirfilter | audiointerleave | audioinvert | audiokaraoke | audiolatency | audiomixer | audiomixmatrix | audiopanorama | audioparse | audiorate | audioresample | audiosegmentclip | audiotestsrc | audiowsincband | audiowsinclimit | auparse | autoaudiosink | autoaudiosrc | autoconvert | autovideoconvert | autovideosink | autovideosrc | avdtpsink | avdtpsrc | avidemux | avimux | avisubtitle | avwait | bayer2rgb | bin | bpmdetect | breakmydata | bs2b | bulge | burn | bz2dec | bz2enc | cacasink | cairooverlay | camerabin | capsfilter | capssetter | cdiocddasrc | cdparanoiasrc | checksumsink | chopmydata | chromahold | chromium | circle | clockoverlay | clutterautovideosink | coloreffects | combdetect | compare | compositor | concat | cpureport | curlfilesink | curlftpsink | curlhttpsink | curlhttpsrc | curlsmtpsink | cutter | dashdemux | dataurisrc | dc1394src | dcaparse | debugspy | decklinkaudiosink | decklinkaudiosrc | decklinkvideosink | decklinkvideosrc | decodebin | decodebin3 | deinterlace | deinterleave | dicetv | diffuse | dilate | diracparse | dodge | downloadbuffer | dsexample | dtlsdec | dtlsenc | dtlssrtpdec | dtlssrtpdemux | dtlssrtpenc | dtmfdetect | dtmfsrc | dtsdec | dv1394src | dvbbasebin | dvbsrc | dvbsuboverlay | dvdec | dvdemux | dvdlpcmdec | dvdreadsrc | dvdspu | dvdsubdec | dvdsubparse | dynudpsink | edgetv | encodebin | equalizer-10bands | equalizer-3bands | equalizer-nbands | errorignore | exclusion | faad | faceoverlay | fakesink | fakesrc | fakevideosink | fbdevsink | fdsink | fdsrc | festival | fieldanalysis | filesink | filesrc | fisheye | flacdec | flacenc | flacparse | flactag | flitetestsrc | fluiddec | flvdemux | flvmux | flxdec | fpsdisplaysink | freeverb | funnel | gamma | gaussianblur | gdkpixbufdec | gdkpixbufoverlay | gdkpixbufsink | gdpdepay | gdppay | giosink | giosrc | giostreamsink | giostreamsrc | glcolorbalance | glcolorconvert | glcolorscale | gldeinterlace | gldownload | gleffects | gleffects_blur | gleffects_bulge | gleffects_fisheye | gleffects_glow | gleffects_heat | gleffects_identity | gleffects_laplacian | gleffects_lumaxpro | gleffects_mirror | gleffects_sepia | gleffects_sin | gleffects_sobel | gleffects_square | gleffects_squeeze | gleffects_stretch | gleffects_tunnel | gleffects_twirl | gleffects_xpro | gleffects_xray | glfilterapp | glfilterbin | glfiltercube | glimagesink | glimagesinkelement | glmixerbin | gloverlay | glshader | glsinkbin | glsrcbin | glstereomix | glstereosplit | gltestsrc | gltransformation | glupload | glvideoflip | glvideomixer | glvideomixerelement | glviewconvert | gmedec | goom | goom2k1 | gsmdec | gsmenc | gtkglsink | gtksink | h263parse | h264parse | h265parse | hdv1394src | hlsdemux | hlssink | hlssink2 | icydemux | id3demux | id3mux | id3v2mux | identity | imagefreeze | input-selector | interaudiosink | interaudiosrc | interlace | interleave | intersubsink | intersubsrc | intervideosink | intervideosrc | ipcpipelinesink | ipcpipelinesrc | ipcslavepipeline | irtspparse | ismlmux | ivfparse | ivtc | jackaudiosink | jackaudiosrc | jifmux | jp2kdecimator | jpeg2000parse | jpegdec | jpegenc | jpegparse | kaleidoscope | katedec | kateenc | kateparse | katetag | kmssink | lamemp3enc | lcms | level | libde265dec | liveadder | marble | matroskademux | matroskamux | matroskaparse | midiparse | mirror | mj2mux | mmssrc | modplug | monoscope | mp4mux | mpeg2dec | mpeg2enc | mpeg4videoparse | mpegaudioparse | mpegpsdemux | mpegpsmux | mpegtsmux | mpegvideoparse | mpg123audiodec | mplex | mssdemux | mulawdec | mulawenc | multifdsink | multifilesink | multifilesrc | multipartdemux | multipartmux | multiqueue | multisocketsink | multiudpsink | musepackdec | mxfdemux | mxfmux | navigationtest | navseek | netsim | nv3dsink | nvarguscamerasrc | nvcompositor | nvdewarper | nvdrmvideosink | nvdsanalytics | nvdsosd | nveglglessink | nveglstreamsrc | nvegltransform | nvinfer | nvinferserver | nvivafilter | nvjpegdec | nvjpegenc | nvmsgbroker | nvmsgconv | nvmultistreamtiler | nvof | nvofvisual | nvoverlaysink | nvsegvisual | nvstreamdemux | nvstreammux | nvtee | nvtracker | nvv4l2camerasrc | nvv4l2decoder | nvv4l2h264enc | nvv4l2h265enc | nvv4l2vp8enc | nvv4l2vp9enc | nvvidconv | nvvideoconvert | nvvideosink | ofa | oggaviparse | oggdemux | oggmux | oggparse | ogmaudioparse | ogmtextparse | ogmvideoparse | omxh264dec | omxh264enc | omxh265dec | omxh265enc | omxmpeg2videodec | omxmpeg4videodec | omxvp8dec | omxvp8enc | omxvp9dec | omxvp9enc | omxwmvdec | openalsink | openalsrc | openexrdec | openjpegdec | openjpegenc | openmptdec | optv | opusdec | opusenc | opusparse | oss4sink | oss4src | osssink | osssrc | output-selector | parsebin | pcapparse | perspective | pinch | pipeline | pitch | playbin | playbin3 | playsink | pngdec | pngenc | pngparse | pnmdec | pnmenc | pnmsrc | progressreport | proxysink | proxysrc | pulsesink | pulsesrc | pushfilesrc | qtdemux | qtmoovrecover | qtmux | quarktv | queue | queue2 | rademux | radioactv | rawaudioparse | rawvideoparse | rdtdepay | rdtmanager | readable | removesilence | revtv | rfbsrc | rganalysis | rgb2bayer | rglimiter | rgvolume | rippletv | rmdemux | rndbuffersize | rotate | rsndvdbin | rsvgdec | rsvgoverlay | rtmpsink | rtmpsrc | rtpac3depay | rtpac3pay | rtpamrdepay | rtpamrpay | rtpasfdepay | rtpasfpay | rtpbin | rtpbvdepay | rtpbvpay | rtpceltdepay | rtpceltpay | rtpdec | rtpdtmfdepay | rtpdtmfmux | rtpdtmfsrc | rtpdvdepay | rtpdvpay | rtpg722depay | rtpg722pay | rtpg723depay | rtpg723pay | rtpg726depay | rtpg726pay | rtpg729depay | rtpg729pay | rtpgsmdepay | rtpgsmpay | rtpgstdepay | rtpgstpay | rtph261depay | rtph261pay | rtph263depay | rtph263pay | rtph263pdepay | rtph263ppay | rtph264depay | rtph264pay | rtph265depay | rtph265pay | rtpilbcdepay | rtpilbcpay | rtpj2kdepay | rtpj2kpay | rtpjitterbuffer | rtpjpegdepay | rtpjpegpay | rtpklvdepay | rtpklvpay | rtpL16depay | rtpL16pay | rtpL24depay | rtpL24pay | rtpL8depay | rtpL8pay | rtpmp1sdepay | rtpmp2tdepay | rtpmp2tpay | rtpmp4adepay | rtpmp4apay | rtpmp4gdepay | rtpmp4gpay | rtpmp4vdepay | rtpmp4vpay | rtpmpadepay | rtpmpapay | rtpmparobustdepay | rtpmpvdepay | rtpmpvpay | rtpmux | rtponvifparse | rtponviftimestamp | rtpopusdepay | rtpopuspay | rtppcmadepay | rtppcmapay | rtppcmudepay | rtppcmupay | rtpptdemux | rtpqcelpdepay | rtpqdm2depay | rtpreddec | rtpredenc | rtprtxqueue | rtprtxreceive | rtprtxsend | rtpsbcdepay | rtpsbcpay | rtpsession | rtpsirendepay | rtpsirenpay | rtpspeexdepay | rtpspeexpay | rtpssrcdemux | rtpstorage | rtpstreamdepay | rtpstreampay | rtpsv3vdepay | rtptheoradepay | rtptheorapay | rtpulpfecdec | rtpulpfecenc | rtpvorbisdepay | rtpvorbispay | rtpvp8depay | rtpvp8pay | rtpvp9depay | rtpvp9pay | rtpvrawdepay | rtpvrawpay | rtpxqtdepay | rtspreal | rtspsrc | rtspwms | sbcdec | sbcenc | sbcparse | scaletempo | scenechange | sdpdemux | sdpsrc | sfdec | shagadelictv | shapewipe | shmsink | shmsrc | shout2send | siddec | simplevideomark | simplevideomarkdetect | sirendec | sirenenc | smooth | smpte | smptealpha | socketsrc | solarize | souphttpclientsink | souphttpsrc | spacescope | spanplc | spectrascope | spectrum | speed | speexdec | speexenc | sphere | splitfilesrc | splitmuxsink | splitmuxsrc | square | srtenc | srtpdec | srtpenc | ssaparse | stereo | streaktv | streamiddemux | streamsynchronizer | stretch | subparse | subtitleoverlay | synaescope | taginject | tcpclientsink | tcpclientsrc | tcpserversink | tcpserversrc | tee | teletextdec | testsink | textoverlay | textrender | theoradec | theoraenc | theoraparse | timecodestamper | timeoverlay | tonegeneratesrc | tsdemux | tsparse | ttmlparse | ttmlrender | tunnel | twirl | twolamemp2enc | udpsink | udpsrc | unalignedaudioparse | unalignedvideoparse | uridecodebin | uridecodebin3 | urisourcebin | uvch264mjpgdemux | uvch264src | v4l2radio | v4l2sink | v4l2src | valve | vc1parse | vcdsrc | vertigotv | videoanalyse | videobalance | videobox | videoconvert | videocrop | videocuda | videodiff | videoflip | videoframe-audiolevel | videomedian | videomixer | videoparse | videorate | videoscale | videosegmentclip | videotestsrc | viewfinderbin | vmncdec | voaacenc | voamrwbenc | volume | vorbisdec | vorbisenc | vorbisparse | vorbistag | vp8dec | vp8enc | vp9dec | vp9enc | vulkansink | vulkanupload | warptv | watchdog | waterripple | wavenc | wavescope | wavpackdec | wavpackenc | wavpackparse | wavparse | waylandsink | webmmux | webpdec | webpenc | webrtcbin | webrtcdsp | webrtcechoprobe | webvttenc | wildmididec | wrappercamerabinsrc | x264enc | x265enc | ximagesink | ximagesrc | xingmux | xvimagesink | y4mdec | y4menc | yadif | zbar | zebrastripe |   \n  )\\b\n"
        }
      ]
    },
    "connector": {
      "patterns": [
        {
          "name": "support.function.magic.gstlaunch",
          "match": "!"
        }
      ]
    },
    "pad": {
      "patterns": [
        {
          "name": "support.function.magic.gstlaunch",
          "match": "\\s+\\w+([\\w_-])*\\.(sink|src)_\\d+\\s+"
        }
      ]
    },
    "string": {
      "name": "string.quoted.gstlaunch",
      "begin": "(['\"])",
      "end": "(\\1)|((?<!\\\\)\\n)",
      "patterns": [
        {
          "match": "[\\w\\s]+?"
        }
      ]
    },
    "capskey": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.gstlaunch",
          "match": "\\bcaps(?==[\\w'])"
        }
      ]
    },
    "capsval": {
      "patterns": [
        {
          "name": "entity.name.class.gstlaunch",
          "match": "(?<=caps=)'?[\\w\\./,=-]+'?\\s?"
        }
      ]
    },
    "capsalone": {
      "patterns": [
        {
          "name": "entity.name.class.gstlaunch",
          "match": "(?<=!)\\s+['/\\w,=-]+"
        }
      ]
    },
    "property": {
      "patterns": [
        {
          "name": "entity.name.class.gstlaunch",
          "match": "[/\\w-\\\\.]+=[/\\w-\\.]+"
        }
      ]
    }
  },
  "scopeName": "root.gstlaunch"
}
